(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[478],{3087:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/java-features/java-9",function(){return t(2425)}])},2425:function(e,a,t){"use strict";t.r(a),t.d(a,{__toc:function(){return c}});var n=t(5893),i=t(2673),o=t(373),r=t(8426);t(9128);var d=t(2643);let c=[{depth:2,value:"Java 9",id:"java-9"},{depth:2,value:"참고자료",id:"참고자료"},{depth:2,value:"요약",id:"요약"}];function _createMdxContent(e){let a=Object.assign({h2:"h2",ul:"ul",li:"li",a:"a",code:"code"},(0,d.a)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h2,{id:"java-9",children:"Java 9"}),"\n",(0,n.jsx)(a.h2,{id:"참고자료",children:"참고자료"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://thinkground.studio/%EC%9D%BC%EB%B0%98%EC%A0%81%EC%9D%B8-gc-%EB%82%B4%EC%9A%A9%EA%B3%BC-g1gc-garbage-first-garbage-collector-%EB%82%B4%EC%9A%A9/",children:"일반적인 GC와 G1GC"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://steady-coding.tistory.com/590",children:"G1GC의 라이프사이클, 장단점, heap 구조"})}),"\n"]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(a.h2,{id:"요약",children:"요약"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"디폴트 메서드에도 package private 지정 가능"}),"\n",(0,n.jsxs)(a.li,{children:["try with resource","\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"과거 방식 : try 내부 불록에 인라인으로 선언되어야 하는 방식"}),"\n",(0,n.jsx)(a.li,{children:"Java 9 이후의 방식 : try 외부에서 자원을 선언해도 가능"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.li,{children:"익명객체 생성 시에 다이아몬드 연산자 지원"}),"\n",(0,n.jsxs)(a.li,{children:["불변 컬렉션 API","\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["e.g. ",(0,n.jsx)(a.code,{children:'List.of("1", "2", "3")'})]}),"\n",(0,n.jsxs)(a.li,{children:["e.g. ",(0,n.jsx)(a.code,{children:"Set.of(1,2,3)"})]}),"\n",(0,n.jsxs)(a.li,{children:["e.g. ",(0,n.jsx)(a.code,{children:'Map.of("1":1, "2",2)'})]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"Optional.stream()"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Optional 객체 역시 Stream 으로 처리할 수 있게 되었다."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["G1GC","\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"JDK 9 에서부터 G1 가비지 컬렉터가 디폴트 GC. 하지만 Java 9 까지는 Full GC는 싱글 스레드 기반 Mark Sweep Compact 알고리즘."}),"\n",(0,n.jsx)(a.li,{children:"Region 을 일정한 크기로 나누어 객체를 할당한다. G1GC는 Region 을 튜닝하고 이에 따라 stop the world 를 최소화한다."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.li,{children:"JShll 커맨드 라인 툴 도입"}),"\n",(0,n.jsxs)(a.li,{children:["새로운 Http Client 도입 (",(0,n.jsx)(a.code,{children:"HttpRequest"}),")"]}),"\n",(0,n.jsxs)(a.li,{children:["프로세스 API (",(0,n.jsx)(a.code,{children:"ProcessHandle"}),"클래스)"]}),"\n",(0,n.jsx)(a.li,{children:"JCMD 커맨드 라인툴"}),"\n",(0,n.jsx)(a.li,{children:"Publish, Subscriber 프레임워크"}),"\n",(0,n.jsxs)(a.li,{children:["통합 JVM 로깅","\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"JVM 로깅을 제공하는 공통 기능이 생겼는데, 각 모듈별로 독자적으로 공통기능을 사용해 독자적으로 로깅을 수행할 수 있는 로깅이 Java 9 부터 도입"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)("br",{})]})}let l={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:a}=Object.assign({},(0,d.a)(),e.components);return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/java-features/java-9.mdx",route:"/java-features/java-9",timestamp:17130804e5,pageMap:[{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"intellij-hotkey",route:"/intellij-hotkey",children:[{kind:"MdxPage",name:"1-IDE-menu",route:"/intellij-hotkey/1-IDE-menu"},{kind:"MdxPage",name:"2-editor-menu",route:"/intellij-hotkey/2-editor-menu"},{kind:"Meta",data:{"1-IDE-menu":"1. IDE 메뉴","2-editor-menu":"2. 에디터 메뉴"}}]},{kind:"MdxPage",name:"intellij-hotkey",route:"/intellij-hotkey"},{kind:"Folder",name:"java-features",route:"/java-features",children:[{kind:"MdxPage",name:"java-10",route:"/java-features/java-10"},{kind:"MdxPage",name:"java-11",route:"/java-features/java-11"},{kind:"MdxPage",name:"java-16",route:"/java-features/java-16"},{kind:"MdxPage",name:"java-17",route:"/java-features/java-17"},{kind:"MdxPage",name:"java-21",route:"/java-features/java-21"},{kind:"MdxPage",name:"java-8",route:"/java-features/java-8"},{kind:"MdxPage",name:"java-9",route:"/java-features/java-9"},{kind:"Meta",data:{"java-8":"Java 8","java-9":"Java 9","java-10":"Java 10","java-11":"Java 11","java-16":"Java 16","java-17":"Java 17","java-21":"Java 21"}}]},{kind:"MdxPage",name:"java-features",route:"/java-features"},{kind:"Folder",name:"jvm",route:"/jvm",children:[{kind:"MdxPage",name:"compiler-interpreter-jit-compiler",route:"/jvm/compiler-interpreter-jit-compiler"},{kind:"MdxPage",name:"java-code-compile-execution-processes",route:"/jvm/java-code-compile-execution-processes"},{kind:"MdxPage",name:"jvm-modules",route:"/jvm/jvm-modules"},{kind:"MdxPage",name:"minor-gc-major-gc-object-lifecycle",route:"/jvm/minor-gc-major-gc-object-lifecycle"},{kind:"MdxPage",name:"what-is-garbage-collector",route:"/jvm/what-is-garbage-collector"},{kind:"Meta",data:{"java-code-compile-execution-processes":"Java 파일이 컴파일되어 실행되기까지","compiler-interpreter-jit-compiler":"정적 컴파일러, 인터프리터, JIT 컴파일러","jvm-modules":"JVM 의 각 모듈들","what-is-garbage-collector":"가비지 컬렉터란?","minor-gc-major-gc-object-lifecycle":"Minor GC, Major GC, 객체의 생존 흐름"}}]},{kind:"MdxPage",name:"jvm",route:"/jvm"},{kind:"Folder",name:"lombok-effective-how-to",route:"/lombok-effective-how-to",children:[{kind:"MdxPage",name:"builder-object-creation-builder-variation",route:"/lombok-effective-how-to/builder-object-creation-builder-variation"},{kind:"MdxPage",name:"builder-object-creation-static-factory-method",route:"/lombok-effective-how-to/builder-object-creation-static-factory-method"},{kind:"MdxPage",name:"builder-object-creation-validation-check",route:"/lombok-effective-how-to/builder-object-creation-validation-check"},{kind:"MdxPage",name:"stop-using-data-annotation",route:"/lombok-effective-how-to/stop-using-data-annotation"},{kind:"Meta",data:{"stop-using-data-annotation":"@Data 애노테이션은 가급적 사용을 피하자","builder-object-creation-validation-check":"객체 생성시 유효성 체크는 철저히","builder-object-creation-builder-variation":"객체 생성 빌더를 용도별로 구별하자","builder-object-creation-static-factory-method":"빌더를 통해 객체생성은 정적 팩토리 메서드로"}}]},{kind:"MdxPage",name:"lombok-effective-how-to",route:"/lombok-effective-how-to"},{kind:"Folder",name:"object",route:"/object",children:[{kind:"MdxPage",name:"3-cowork-responsibility-role",route:"/object/3-cowork-responsibility-role"},{kind:"MdxPage",name:"9-flexible-design",route:"/object/9-flexible-design"},{kind:"Meta",data:{"3-cowork-responsibility-role":"3. 협력, 책임, 역할","9-flexible-design":"9. 유연한 설계"}}]},{kind:"MdxPage",name:"object",route:"/object"},{kind:"Folder",name:"tdd",route:"/tdd",children:[{kind:"MdxPage",name:"stub-spy-mock-vs-dummy-fake",route:"/tdd/stub-spy-mock-vs-dummy-fake"},{kind:"Meta",data:{"stub-spy-mock-vs-dummy-fake":"Stub Spy Mock Vs Dummy Fake"}}]},{kind:"MdxPage",name:"tdd",route:"/tdd"},{kind:"Meta",data:{index:"Introduction",jvm:"JVM","java-features":"Java Features",object:"Object","lombok-effective-how-to":"롬복, 효율적으로 쓰자",tdd:"TDD","intellij-hotkey":"Intellij 단축키",contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"Java 9",headings:c},pageNextRoute:"/java-features/java-9",nextraLayout:o.ZP,themeConfig:r.Z};a.default=(0,i.j)(l)},8426:function(e,a,t){"use strict";var n=t(5893);t(7294);let i={logo:(0,n.jsx)("span",{children:"Docs Java Basic"}),project:{link:"https://github.com/chagchagchag/docs-java-basic"},docsRepositoryBase:"https://github.com/chagchagchag/docs-java-basic",footer:{text:"Nextra Docs Template"}};a.Z=i},5789:function(){}},function(e){e.O(0,[774,796,888,179],function(){return e(e.s=3087)}),_N_E=e.O()}]);